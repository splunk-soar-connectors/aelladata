{
    "appid": "c3370d8e-79cd-410a-91b2-72079bd475e7",
    "name": "Aella Data Starlight",
    "description": "This app integrates with an Aella Data installation to implement ingestion and investigative actions",
    "publisher": "Aella Data",
    "type": "siem",
    "main_module": "aelladata_connector.pyc",
    "app_version": "1.6.3",
    "utctime_updated": "2018-02-22T20:04:34.000000Z",
    "package_name": "phantom_aelladata",
    "product_name": "Starlight",
    "product_vendor": "Aella Data",
    "product_version_regex": ".*",
    "min_phantom_version": "4.0.1068",
    "logo": "logo_aelladata.svg",
    "logo": "logo_aelladata_dark.svg",
    "logo_dark": "logo_baydynamics_dark.svg",
    "license": "Copyright (c) Aella Data Inc. 2017-2018",
    "configuration": {
        "url": {
            "data_type": "string",
            "order": 0,
            "description": "Starlight URL, e.g. https://mystarlight.enterprise.com/aellaelastic",
            "required": true
        },
        "username": {
            "data_type": "string",
            "order": 1,
            "description": "Username",
            "required": true
        },
        "password": {
            "data_type": "password",
            "order": 2,
            "description": "Password",
            "required": true
        },
        "event": {
            "description": "Security event",
            "data_type": "string",
            "required": false,
            "order": 3
        },
        "score": {
            "description": "Security event severity threshold",
            "data_type": "numeric",
            "required": false,
            "order": 4
        }
    },
    "actions": [
        {
            "action": "test connectivity",
            "description": "Validate the asset configuration for connectivity. This action logs into the device to check the connection and credentials",
            "type": "test",
            "identifier": "test_asset_connectivity",
            "read_only": true,
            "parameters": {},
            "output": [],
            "versions": "EQ(*)"
        },
        {
            "action": "get event",
            "description": "Run a search query to get event on the Starlight installation based on the on_poll result",
            "verbose": "The action is to query the detailed information for the given event id, which is passed on from artifect['id']",
            "type": "investigate",
            "identifier": "run_query",
            "read_only": true,
            "parameters": {
                "event_id": {
                    "description": "Event id to query on",
                    "data_type": "string",
                    "order": 0,
                    "required": true,
                    "contains": [
                        "starlight event id"
                    ],
                    "primary": true
                }
            },
            "render": {
                "type": "json",
                "width": 10,
                "height": 5,
                "view": "aelladata_view.display_query_results",
                "title": "Query Result"
            },
            "output": [
                {
                    "data_path": "action_result.data.*.dstip",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.dstip_reputation",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.dstport",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.srcip",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.srcip_reputation",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.srcport",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.proto_name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.event_name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.event_category",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.event_type",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*._index",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.severity",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.event_id",
                    "data_type": "string",
                    "contains": [
                        "starlight event id"
                    ]
                },
                {
                    "data_path": "action_result.data.*.timed_out",
                    "data_type": "boolean"
                }
            ],
            "versions": "EQ(*)"
        },
        {
            "action": "on poll",
            "identifier": "on_poll",
            "description": "Run a query in Starlight and ingest the results",
            "verbose": "This will run a query in starlight using the <b>index</b>, <b>type</b>, <b>routing</b>, and <b>query</b> configured in the app settings and ingest the results. The <b>query</b> must account for relative time between ingestion runs, query limits, and page sizes.<br>",
            "type": "ingest",
            "read_only": true,
            "parameters": {
                "container_id": {
                    "description": "Limit ingestion to these container IDs",
                    "data_type": "string",
                    "order": 0,
                    "required": false
                },
                "start_time": {
                    "description": "Start of time range in epoch time (default: 10 days ago)",
                    "data_type": "numeric",
                    "order": 1,
                    "required": false
                },
                "end_time": {
                    "description": "End of time range in epoch time (default: now)",
                    "data_type": "numeric",
                    "order": 2,
                    "required": false
                },
                "container_count": {
                    "description": "Maximum number of containers to create",
                    "data_type": "numeric",
                    "order": 3,
                    "required": false
                },
                "artifact_count": {
                    "description": "Maximum number of artifacts to create per container.",
                    "data_type": "numeric",
                    "order": 4,
                    "required": false
                }
            },
            "output": [],
            "versions": "EQ(*)"
        }
    ]
}
